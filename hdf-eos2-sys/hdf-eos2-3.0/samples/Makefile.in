# Makefile.in generated by automake 1.13.4 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@
VPATH = @srcdir@
am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
DIST_COMMON = $(top_srcdir)/config/include.am $(srcdir)/Makefile.in \
	$(srcdir)/Makefile.am $(top_srcdir)/config/depcomp README
check_PROGRAMS = SetupSwath$(EXEEXT) DefineFields$(EXEEXT) \
	WriteFields$(EXEEXT) AppendField$(EXEEXT) \
	DefineGDflds$(EXEEXT) DefineLevels$(EXEEXT) \
	InquireGrid$(EXEEXT) InquireSwath$(EXEEXT) ReadFields$(EXEEXT) \
	ReadGDflds$(EXEEXT) ReadLevels$(EXEEXT) SetupGrid$(EXEEXT) \
	SetupPoint$(EXEEXT) SubsetGrid$(EXEEXT) SubsetPoint$(EXEEXT) \
	SubsetSwath$(EXEEXT) UpdateLevels$(EXEEXT) \
	WriteGDflds$(EXEEXT) WriteLevels$(EXEEXT) $(am__EXEEXT_1)
@FORTRAN_77_CONDITIONAL_TRUE@am__append_1 = \
@FORTRAN_77_CONDITIONAL_TRUE@	appendfield     \
@FORTRAN_77_CONDITIONAL_TRUE@	definefields    \
@FORTRAN_77_CONDITIONAL_TRUE@	definegdflds    \
@FORTRAN_77_CONDITIONAL_TRUE@	definelevels    \
@FORTRAN_77_CONDITIONAL_TRUE@	inquiregrid     \
@FORTRAN_77_CONDITIONAL_TRUE@	inquireswath    \
@FORTRAN_77_CONDITIONAL_TRUE@	readfields      \
@FORTRAN_77_CONDITIONAL_TRUE@	readgdflds      \
@FORTRAN_77_CONDITIONAL_TRUE@	readlevels      \
@FORTRAN_77_CONDITIONAL_TRUE@	setupgrid       \
@FORTRAN_77_CONDITIONAL_TRUE@	setuppoint      \
@FORTRAN_77_CONDITIONAL_TRUE@	setupswath      \
@FORTRAN_77_CONDITIONAL_TRUE@	subsetgrid      \
@FORTRAN_77_CONDITIONAL_TRUE@	subsetpoint     \
@FORTRAN_77_CONDITIONAL_TRUE@	subsetswath     \
@FORTRAN_77_CONDITIONAL_TRUE@	updatelevels    \
@FORTRAN_77_CONDITIONAL_TRUE@	writefields     \
@FORTRAN_77_CONDITIONAL_TRUE@	writegdflds     \
@FORTRAN_77_CONDITIONAL_TRUE@	writelevels

@FORTRAN_77_CONDITIONAL_TRUE@am__append_2 = reset_hdf_files \
@FORTRAN_77_CONDITIONAL_TRUE@	swath_demo_fortran \
@FORTRAN_77_CONDITIONAL_TRUE@	grid_demo_fortran \
@FORTRAN_77_CONDITIONAL_TRUE@	point_demo_fortran
subdir = samples
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/m4/hdf4.m4 $(top_srcdir)/m4/stdlib.m4 \
	$(top_srcdir)/m4/stdinc.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/include/HE2_config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
@FORTRAN_77_CONDITIONAL_TRUE@am__EXEEXT_1 = appendfield$(EXEEXT) \
@FORTRAN_77_CONDITIONAL_TRUE@	definefields$(EXEEXT) \
@FORTRAN_77_CONDITIONAL_TRUE@	definegdflds$(EXEEXT) \
@FORTRAN_77_CONDITIONAL_TRUE@	definelevels$(EXEEXT) \
@FORTRAN_77_CONDITIONAL_TRUE@	inquiregrid$(EXEEXT) \
@FORTRAN_77_CONDITIONAL_TRUE@	inquireswath$(EXEEXT) \
@FORTRAN_77_CONDITIONAL_TRUE@	readfields$(EXEEXT) \
@FORTRAN_77_CONDITIONAL_TRUE@	readgdflds$(EXEEXT) \
@FORTRAN_77_CONDITIONAL_TRUE@	readlevels$(EXEEXT) \
@FORTRAN_77_CONDITIONAL_TRUE@	setupgrid$(EXEEXT) \
@FORTRAN_77_CONDITIONAL_TRUE@	setuppoint$(EXEEXT) \
@FORTRAN_77_CONDITIONAL_TRUE@	setupswath$(EXEEXT) \
@FORTRAN_77_CONDITIONAL_TRUE@	subsetgrid$(EXEEXT) \
@FORTRAN_77_CONDITIONAL_TRUE@	subsetpoint$(EXEEXT) \
@FORTRAN_77_CONDITIONAL_TRUE@	subsetswath$(EXEEXT) \
@FORTRAN_77_CONDITIONAL_TRUE@	updatelevels$(EXEEXT) \
@FORTRAN_77_CONDITIONAL_TRUE@	writefields$(EXEEXT) \
@FORTRAN_77_CONDITIONAL_TRUE@	writegdflds$(EXEEXT) \
@FORTRAN_77_CONDITIONAL_TRUE@	writelevels$(EXEEXT)
AppendField_SOURCES = AppendField.c
AppendField_OBJECTS = AppendField.$(OBJEXT)
AppendField_LDADD = $(LDADD)
AppendField_DEPENDENCIES = $(LIBHDFEOS2) $(LIBGCTP)
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
DefineFields_SOURCES = DefineFields.c
DefineFields_OBJECTS = DefineFields.$(OBJEXT)
DefineFields_LDADD = $(LDADD)
DefineFields_DEPENDENCIES = $(LIBHDFEOS2) $(LIBGCTP)
DefineGDflds_SOURCES = DefineGDflds.c
DefineGDflds_OBJECTS = DefineGDflds.$(OBJEXT)
DefineGDflds_LDADD = $(LDADD)
DefineGDflds_DEPENDENCIES = $(LIBHDFEOS2) $(LIBGCTP)
DefineLevels_SOURCES = DefineLevels.c
DefineLevels_OBJECTS = DefineLevels.$(OBJEXT)
DefineLevels_LDADD = $(LDADD)
DefineLevels_DEPENDENCIES = $(LIBHDFEOS2) $(LIBGCTP)
InquireGrid_SOURCES = InquireGrid.c
InquireGrid_OBJECTS = InquireGrid.$(OBJEXT)
InquireGrid_LDADD = $(LDADD)
InquireGrid_DEPENDENCIES = $(LIBHDFEOS2) $(LIBGCTP)
InquireSwath_SOURCES = InquireSwath.c
InquireSwath_OBJECTS = InquireSwath.$(OBJEXT)
InquireSwath_LDADD = $(LDADD)
InquireSwath_DEPENDENCIES = $(LIBHDFEOS2) $(LIBGCTP)
ReadFields_SOURCES = ReadFields.c
ReadFields_OBJECTS = ReadFields.$(OBJEXT)
ReadFields_LDADD = $(LDADD)
ReadFields_DEPENDENCIES = $(LIBHDFEOS2) $(LIBGCTP)
ReadGDflds_SOURCES = ReadGDflds.c
ReadGDflds_OBJECTS = ReadGDflds.$(OBJEXT)
ReadGDflds_LDADD = $(LDADD)
ReadGDflds_DEPENDENCIES = $(LIBHDFEOS2) $(LIBGCTP)
ReadLevels_SOURCES = ReadLevels.c
ReadLevels_OBJECTS = ReadLevels.$(OBJEXT)
ReadLevels_LDADD = $(LDADD)
ReadLevels_DEPENDENCIES = $(LIBHDFEOS2) $(LIBGCTP)
SetupGrid_SOURCES = SetupGrid.c
SetupGrid_OBJECTS = SetupGrid.$(OBJEXT)
SetupGrid_LDADD = $(LDADD)
SetupGrid_DEPENDENCIES = $(LIBHDFEOS2) $(LIBGCTP)
SetupPoint_SOURCES = SetupPoint.c
SetupPoint_OBJECTS = SetupPoint.$(OBJEXT)
SetupPoint_LDADD = $(LDADD)
SetupPoint_DEPENDENCIES = $(LIBHDFEOS2) $(LIBGCTP)
SetupSwath_SOURCES = SetupSwath.c
SetupSwath_OBJECTS = SetupSwath.$(OBJEXT)
SetupSwath_LDADD = $(LDADD)
SetupSwath_DEPENDENCIES = $(LIBHDFEOS2) $(LIBGCTP)
SubsetGrid_SOURCES = SubsetGrid.c
SubsetGrid_OBJECTS = SubsetGrid.$(OBJEXT)
SubsetGrid_LDADD = $(LDADD)
SubsetGrid_DEPENDENCIES = $(LIBHDFEOS2) $(LIBGCTP)
SubsetPoint_SOURCES = SubsetPoint.c
SubsetPoint_OBJECTS = SubsetPoint.$(OBJEXT)
SubsetPoint_LDADD = $(LDADD)
SubsetPoint_DEPENDENCIES = $(LIBHDFEOS2) $(LIBGCTP)
SubsetSwath_SOURCES = SubsetSwath.c
SubsetSwath_OBJECTS = SubsetSwath.$(OBJEXT)
SubsetSwath_LDADD = $(LDADD)
SubsetSwath_DEPENDENCIES = $(LIBHDFEOS2) $(LIBGCTP)
UpdateLevels_SOURCES = UpdateLevels.c
UpdateLevels_OBJECTS = UpdateLevels.$(OBJEXT)
UpdateLevels_LDADD = $(LDADD)
UpdateLevels_DEPENDENCIES = $(LIBHDFEOS2) $(LIBGCTP)
WriteFields_SOURCES = WriteFields.c
WriteFields_OBJECTS = WriteFields.$(OBJEXT)
WriteFields_LDADD = $(LDADD)
WriteFields_DEPENDENCIES = $(LIBHDFEOS2) $(LIBGCTP)
WriteGDflds_SOURCES = WriteGDflds.c
WriteGDflds_OBJECTS = WriteGDflds.$(OBJEXT)
WriteGDflds_LDADD = $(LDADD)
WriteGDflds_DEPENDENCIES = $(LIBHDFEOS2) $(LIBGCTP)
WriteLevels_SOURCES = WriteLevels.c
WriteLevels_OBJECTS = WriteLevels.$(OBJEXT)
WriteLevels_LDADD = $(LDADD)
WriteLevels_DEPENDENCIES = $(LIBHDFEOS2) $(LIBGCTP)
am__appendfield_SOURCES_DIST = appendfield.f
@FORTRAN_77_CONDITIONAL_TRUE@am_appendfield_OBJECTS =  \
@FORTRAN_77_CONDITIONAL_TRUE@	appendfield.$(OBJEXT)
appendfield_OBJECTS = $(am_appendfield_OBJECTS)
appendfield_LDADD = $(LDADD)
appendfield_DEPENDENCIES = $(LIBHDFEOS2) $(LIBGCTP)
am__definefields_SOURCES_DIST = definefields.f
@FORTRAN_77_CONDITIONAL_TRUE@am_definefields_OBJECTS =  \
@FORTRAN_77_CONDITIONAL_TRUE@	definefields.$(OBJEXT)
definefields_OBJECTS = $(am_definefields_OBJECTS)
definefields_LDADD = $(LDADD)
definefields_DEPENDENCIES = $(LIBHDFEOS2) $(LIBGCTP)
am__definegdflds_SOURCES_DIST = definegdflds.f
@FORTRAN_77_CONDITIONAL_TRUE@am_definegdflds_OBJECTS =  \
@FORTRAN_77_CONDITIONAL_TRUE@	definegdflds.$(OBJEXT)
definegdflds_OBJECTS = $(am_definegdflds_OBJECTS)
definegdflds_LDADD = $(LDADD)
definegdflds_DEPENDENCIES = $(LIBHDFEOS2) $(LIBGCTP)
am__definelevels_SOURCES_DIST = definelevels.f
@FORTRAN_77_CONDITIONAL_TRUE@am_definelevels_OBJECTS =  \
@FORTRAN_77_CONDITIONAL_TRUE@	definelevels.$(OBJEXT)
definelevels_OBJECTS = $(am_definelevels_OBJECTS)
definelevels_LDADD = $(LDADD)
definelevels_DEPENDENCIES = $(LIBHDFEOS2) $(LIBGCTP)
am__inquiregrid_SOURCES_DIST = inquiregrid.f
@FORTRAN_77_CONDITIONAL_TRUE@am_inquiregrid_OBJECTS =  \
@FORTRAN_77_CONDITIONAL_TRUE@	inquiregrid.$(OBJEXT)
inquiregrid_OBJECTS = $(am_inquiregrid_OBJECTS)
inquiregrid_LDADD = $(LDADD)
inquiregrid_DEPENDENCIES = $(LIBHDFEOS2) $(LIBGCTP)
am__inquireswath_SOURCES_DIST = inquireswath.f
@FORTRAN_77_CONDITIONAL_TRUE@am_inquireswath_OBJECTS =  \
@FORTRAN_77_CONDITIONAL_TRUE@	inquireswath.$(OBJEXT)
inquireswath_OBJECTS = $(am_inquireswath_OBJECTS)
inquireswath_LDADD = $(LDADD)
inquireswath_DEPENDENCIES = $(LIBHDFEOS2) $(LIBGCTP)
am__readfields_SOURCES_DIST = readfields.f
@FORTRAN_77_CONDITIONAL_TRUE@am_readfields_OBJECTS =  \
@FORTRAN_77_CONDITIONAL_TRUE@	readfields.$(OBJEXT)
readfields_OBJECTS = $(am_readfields_OBJECTS)
readfields_LDADD = $(LDADD)
readfields_DEPENDENCIES = $(LIBHDFEOS2) $(LIBGCTP)
am__readgdflds_SOURCES_DIST = readgdflds.f
@FORTRAN_77_CONDITIONAL_TRUE@am_readgdflds_OBJECTS =  \
@FORTRAN_77_CONDITIONAL_TRUE@	readgdflds.$(OBJEXT)
readgdflds_OBJECTS = $(am_readgdflds_OBJECTS)
readgdflds_LDADD = $(LDADD)
readgdflds_DEPENDENCIES = $(LIBHDFEOS2) $(LIBGCTP)
am__readlevels_SOURCES_DIST = readlevels.f
@FORTRAN_77_CONDITIONAL_TRUE@am_readlevels_OBJECTS =  \
@FORTRAN_77_CONDITIONAL_TRUE@	readlevels.$(OBJEXT)
readlevels_OBJECTS = $(am_readlevels_OBJECTS)
readlevels_LDADD = $(LDADD)
readlevels_DEPENDENCIES = $(LIBHDFEOS2) $(LIBGCTP)
am__setupgrid_SOURCES_DIST = setupgrid.f
@FORTRAN_77_CONDITIONAL_TRUE@am_setupgrid_OBJECTS =  \
@FORTRAN_77_CONDITIONAL_TRUE@	setupgrid.$(OBJEXT)
setupgrid_OBJECTS = $(am_setupgrid_OBJECTS)
setupgrid_LDADD = $(LDADD)
setupgrid_DEPENDENCIES = $(LIBHDFEOS2) $(LIBGCTP)
am__setuppoint_SOURCES_DIST = setuppoint.f
@FORTRAN_77_CONDITIONAL_TRUE@am_setuppoint_OBJECTS =  \
@FORTRAN_77_CONDITIONAL_TRUE@	setuppoint.$(OBJEXT)
setuppoint_OBJECTS = $(am_setuppoint_OBJECTS)
setuppoint_LDADD = $(LDADD)
setuppoint_DEPENDENCIES = $(LIBHDFEOS2) $(LIBGCTP)
am__setupswath_SOURCES_DIST = setupswath.f
@FORTRAN_77_CONDITIONAL_TRUE@am_setupswath_OBJECTS =  \
@FORTRAN_77_CONDITIONAL_TRUE@	setupswath.$(OBJEXT)
setupswath_OBJECTS = $(am_setupswath_OBJECTS)
setupswath_LDADD = $(LDADD)
setupswath_DEPENDENCIES = $(LIBHDFEOS2) $(LIBGCTP)
am__subsetgrid_SOURCES_DIST = subsetgrid.f
@FORTRAN_77_CONDITIONAL_TRUE@am_subsetgrid_OBJECTS =  \
@FORTRAN_77_CONDITIONAL_TRUE@	subsetgrid.$(OBJEXT)
subsetgrid_OBJECTS = $(am_subsetgrid_OBJECTS)
subsetgrid_LDADD = $(LDADD)
subsetgrid_DEPENDENCIES = $(LIBHDFEOS2) $(LIBGCTP)
am__subsetpoint_SOURCES_DIST = subsetpoint.f
@FORTRAN_77_CONDITIONAL_TRUE@am_subsetpoint_OBJECTS =  \
@FORTRAN_77_CONDITIONAL_TRUE@	subsetpoint.$(OBJEXT)
subsetpoint_OBJECTS = $(am_subsetpoint_OBJECTS)
subsetpoint_LDADD = $(LDADD)
subsetpoint_DEPENDENCIES = $(LIBHDFEOS2) $(LIBGCTP)
am__subsetswath_SOURCES_DIST = subsetswath.f
@FORTRAN_77_CONDITIONAL_TRUE@am_subsetswath_OBJECTS =  \
@FORTRAN_77_CONDITIONAL_TRUE@	subsetswath.$(OBJEXT)
subsetswath_OBJECTS = $(am_subsetswath_OBJECTS)
subsetswath_LDADD = $(LDADD)
subsetswath_DEPENDENCIES = $(LIBHDFEOS2) $(LIBGCTP)
am__updatelevels_SOURCES_DIST = updatelevels.f
@FORTRAN_77_CONDITIONAL_TRUE@am_updatelevels_OBJECTS =  \
@FORTRAN_77_CONDITIONAL_TRUE@	updatelevels.$(OBJEXT)
updatelevels_OBJECTS = $(am_updatelevels_OBJECTS)
updatelevels_LDADD = $(LDADD)
updatelevels_DEPENDENCIES = $(LIBHDFEOS2) $(LIBGCTP)
am__writefields_SOURCES_DIST = writefields.f
@FORTRAN_77_CONDITIONAL_TRUE@am_writefields_OBJECTS =  \
@FORTRAN_77_CONDITIONAL_TRUE@	writefields.$(OBJEXT)
writefields_OBJECTS = $(am_writefields_OBJECTS)
writefields_LDADD = $(LDADD)
writefields_DEPENDENCIES = $(LIBHDFEOS2) $(LIBGCTP)
am__writegdflds_SOURCES_DIST = writegdflds.f
@FORTRAN_77_CONDITIONAL_TRUE@am_writegdflds_OBJECTS =  \
@FORTRAN_77_CONDITIONAL_TRUE@	writegdflds.$(OBJEXT)
writegdflds_OBJECTS = $(am_writegdflds_OBJECTS)
writegdflds_LDADD = $(LDADD)
writegdflds_DEPENDENCIES = $(LIBHDFEOS2) $(LIBGCTP)
am__writelevels_SOURCES_DIST = writelevels.f
@FORTRAN_77_CONDITIONAL_TRUE@am_writelevels_OBJECTS =  \
@FORTRAN_77_CONDITIONAL_TRUE@	writelevels.$(OBJEXT)
writelevels_OBJECTS = $(am_writelevels_OBJECTS)
writelevels_LDADD = $(LDADD)
writelevels_DEPENDENCIES = $(LIBHDFEOS2) $(LIBGCTP)
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)/include
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
F77COMPILE = $(F77) $(AM_FFLAGS) $(FFLAGS)
LTF77COMPILE = $(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(F77) $(AM_FFLAGS) $(FFLAGS)
AM_V_F77 = $(am__v_F77_@AM_V@)
am__v_F77_ = $(am__v_F77_@AM_DEFAULT_V@)
am__v_F77_0 = @echo "  F77     " $@;
am__v_F77_1 = 
F77LD = $(F77)
F77LINK = $(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(F77LD) $(AM_FFLAGS) $(FFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_F77LD = $(am__v_F77LD_@AM_V@)
am__v_F77LD_ = $(am__v_F77LD_@AM_DEFAULT_V@)
am__v_F77LD_0 = @echo "  F77LD   " $@;
am__v_F77LD_1 = 
SOURCES = AppendField.c DefineFields.c DefineGDflds.c DefineLevels.c \
	InquireGrid.c InquireSwath.c ReadFields.c ReadGDflds.c \
	ReadLevels.c SetupGrid.c SetupPoint.c SetupSwath.c \
	SubsetGrid.c SubsetPoint.c SubsetSwath.c UpdateLevels.c \
	WriteFields.c WriteGDflds.c WriteLevels.c \
	$(appendfield_SOURCES) $(definefields_SOURCES) \
	$(definegdflds_SOURCES) $(definelevels_SOURCES) \
	$(inquiregrid_SOURCES) $(inquireswath_SOURCES) \
	$(readfields_SOURCES) $(readgdflds_SOURCES) \
	$(readlevels_SOURCES) $(setupgrid_SOURCES) \
	$(setuppoint_SOURCES) $(setupswath_SOURCES) \
	$(subsetgrid_SOURCES) $(subsetpoint_SOURCES) \
	$(subsetswath_SOURCES) $(updatelevels_SOURCES) \
	$(writefields_SOURCES) $(writegdflds_SOURCES) \
	$(writelevels_SOURCES)
DIST_SOURCES = AppendField.c DefineFields.c DefineGDflds.c \
	DefineLevels.c InquireGrid.c InquireSwath.c ReadFields.c \
	ReadGDflds.c ReadLevels.c SetupGrid.c SetupPoint.c \
	SetupSwath.c SubsetGrid.c SubsetPoint.c SubsetSwath.c \
	UpdateLevels.c WriteFields.c WriteGDflds.c WriteLevels.c \
	$(am__appendfield_SOURCES_DIST) \
	$(am__definefields_SOURCES_DIST) \
	$(am__definegdflds_SOURCES_DIST) \
	$(am__definelevels_SOURCES_DIST) \
	$(am__inquiregrid_SOURCES_DIST) \
	$(am__inquireswath_SOURCES_DIST) \
	$(am__readfields_SOURCES_DIST) $(am__readgdflds_SOURCES_DIST) \
	$(am__readlevels_SOURCES_DIST) $(am__setupgrid_SOURCES_DIST) \
	$(am__setuppoint_SOURCES_DIST) $(am__setupswath_SOURCES_DIST) \
	$(am__subsetgrid_SOURCES_DIST) $(am__subsetpoint_SOURCES_DIST) \
	$(am__subsetswath_SOURCES_DIST) \
	$(am__updatelevels_SOURCES_DIST) \
	$(am__writefields_SOURCES_DIST) \
	$(am__writegdflds_SOURCES_DIST) \
	$(am__writelevels_SOURCES_DIST)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
F77 = @F77@
FFLAGS = @FFLAGS@
FGREP = @FGREP@
FLIBS = @FLIBS@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
ac_ct_F77 = @ac_ct_F77@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
ACLOCAL_AMFLAGS = "-Im4"
LIBHDFEOS2 = $(top_builddir)/src/libhdfeos.la
LIBGCTP = $(top_builddir)/gctp/src/libGctp.la
EXTRA_DIST = README fixedBuoy0.txt fixedBuoy1.txt floatBuoy0.txt floatBuoy1.txt simple.txt
AM_CPPFLAGS = -I$(top_srcdir)/include -I$(top_srcdir)/gctp/include
LDADD = $(LIBHDFEOS2) $(LIBGCTP)
@FORTRAN_77_CONDITIONAL_TRUE@appendfield_SOURCES = appendfield.f
@FORTRAN_77_CONDITIONAL_TRUE@definefields_SOURCES = definefields.f
@FORTRAN_77_CONDITIONAL_TRUE@definegdflds_SOURCES = definegdflds.f
@FORTRAN_77_CONDITIONAL_TRUE@definelevels_SOURCES = definelevels.f
@FORTRAN_77_CONDITIONAL_TRUE@inquiregrid_SOURCES = inquiregrid.f
@FORTRAN_77_CONDITIONAL_TRUE@inquireswath_SOURCES = inquireswath.f
@FORTRAN_77_CONDITIONAL_TRUE@readfields_SOURCES = readfields.f
@FORTRAN_77_CONDITIONAL_TRUE@readgdflds_SOURCES = readgdflds.f
@FORTRAN_77_CONDITIONAL_TRUE@readlevels_SOURCES = readlevels.f
@FORTRAN_77_CONDITIONAL_TRUE@setupgrid_SOURCES = setupgrid.f
@FORTRAN_77_CONDITIONAL_TRUE@setuppoint_SOURCES = setuppoint.f
@FORTRAN_77_CONDITIONAL_TRUE@setupswath_SOURCES = setupswath.f
@FORTRAN_77_CONDITIONAL_TRUE@subsetgrid_SOURCES = subsetgrid.f
@FORTRAN_77_CONDITIONAL_TRUE@subsetpoint_SOURCES = subsetpoint.f
@FORTRAN_77_CONDITIONAL_TRUE@subsetswath_SOURCES = subsetswath.f
@FORTRAN_77_CONDITIONAL_TRUE@updatelevels_SOURCES = updatelevels.f
@FORTRAN_77_CONDITIONAL_TRUE@writefields_SOURCES = writefields.f
@FORTRAN_77_CONDITIONAL_TRUE@writegdflds_SOURCES = writegdflds.f
@FORTRAN_77_CONDITIONAL_TRUE@writelevels_SOURCES = writelevels.f
TEST_SEQUENCES = swath_demo grid_demo point_demo $(am__append_2)
DISTCLEANFILES = SwathFile.hdf GridFile.hdf PointFile.hdf
all: all-am

.SUFFIXES:
.SUFFIXES: .c .f .lo .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am $(top_srcdir)/config/include.am $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign samples/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign samples/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(top_srcdir)/config/include.am:

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

AppendField$(EXEEXT): $(AppendField_OBJECTS) $(AppendField_DEPENDENCIES) $(EXTRA_AppendField_DEPENDENCIES) 
	@rm -f AppendField$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(AppendField_OBJECTS) $(AppendField_LDADD) $(LIBS)

DefineFields$(EXEEXT): $(DefineFields_OBJECTS) $(DefineFields_DEPENDENCIES) $(EXTRA_DefineFields_DEPENDENCIES) 
	@rm -f DefineFields$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(DefineFields_OBJECTS) $(DefineFields_LDADD) $(LIBS)

DefineGDflds$(EXEEXT): $(DefineGDflds_OBJECTS) $(DefineGDflds_DEPENDENCIES) $(EXTRA_DefineGDflds_DEPENDENCIES) 
	@rm -f DefineGDflds$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(DefineGDflds_OBJECTS) $(DefineGDflds_LDADD) $(LIBS)

DefineLevels$(EXEEXT): $(DefineLevels_OBJECTS) $(DefineLevels_DEPENDENCIES) $(EXTRA_DefineLevels_DEPENDENCIES) 
	@rm -f DefineLevels$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(DefineLevels_OBJECTS) $(DefineLevels_LDADD) $(LIBS)

InquireGrid$(EXEEXT): $(InquireGrid_OBJECTS) $(InquireGrid_DEPENDENCIES) $(EXTRA_InquireGrid_DEPENDENCIES) 
	@rm -f InquireGrid$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(InquireGrid_OBJECTS) $(InquireGrid_LDADD) $(LIBS)

InquireSwath$(EXEEXT): $(InquireSwath_OBJECTS) $(InquireSwath_DEPENDENCIES) $(EXTRA_InquireSwath_DEPENDENCIES) 
	@rm -f InquireSwath$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(InquireSwath_OBJECTS) $(InquireSwath_LDADD) $(LIBS)

ReadFields$(EXEEXT): $(ReadFields_OBJECTS) $(ReadFields_DEPENDENCIES) $(EXTRA_ReadFields_DEPENDENCIES) 
	@rm -f ReadFields$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(ReadFields_OBJECTS) $(ReadFields_LDADD) $(LIBS)

ReadGDflds$(EXEEXT): $(ReadGDflds_OBJECTS) $(ReadGDflds_DEPENDENCIES) $(EXTRA_ReadGDflds_DEPENDENCIES) 
	@rm -f ReadGDflds$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(ReadGDflds_OBJECTS) $(ReadGDflds_LDADD) $(LIBS)

ReadLevels$(EXEEXT): $(ReadLevels_OBJECTS) $(ReadLevels_DEPENDENCIES) $(EXTRA_ReadLevels_DEPENDENCIES) 
	@rm -f ReadLevels$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(ReadLevels_OBJECTS) $(ReadLevels_LDADD) $(LIBS)

SetupGrid$(EXEEXT): $(SetupGrid_OBJECTS) $(SetupGrid_DEPENDENCIES) $(EXTRA_SetupGrid_DEPENDENCIES) 
	@rm -f SetupGrid$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(SetupGrid_OBJECTS) $(SetupGrid_LDADD) $(LIBS)

SetupPoint$(EXEEXT): $(SetupPoint_OBJECTS) $(SetupPoint_DEPENDENCIES) $(EXTRA_SetupPoint_DEPENDENCIES) 
	@rm -f SetupPoint$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(SetupPoint_OBJECTS) $(SetupPoint_LDADD) $(LIBS)

SetupSwath$(EXEEXT): $(SetupSwath_OBJECTS) $(SetupSwath_DEPENDENCIES) $(EXTRA_SetupSwath_DEPENDENCIES) 
	@rm -f SetupSwath$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(SetupSwath_OBJECTS) $(SetupSwath_LDADD) $(LIBS)

SubsetGrid$(EXEEXT): $(SubsetGrid_OBJECTS) $(SubsetGrid_DEPENDENCIES) $(EXTRA_SubsetGrid_DEPENDENCIES) 
	@rm -f SubsetGrid$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(SubsetGrid_OBJECTS) $(SubsetGrid_LDADD) $(LIBS)

SubsetPoint$(EXEEXT): $(SubsetPoint_OBJECTS) $(SubsetPoint_DEPENDENCIES) $(EXTRA_SubsetPoint_DEPENDENCIES) 
	@rm -f SubsetPoint$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(SubsetPoint_OBJECTS) $(SubsetPoint_LDADD) $(LIBS)

SubsetSwath$(EXEEXT): $(SubsetSwath_OBJECTS) $(SubsetSwath_DEPENDENCIES) $(EXTRA_SubsetSwath_DEPENDENCIES) 
	@rm -f SubsetSwath$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(SubsetSwath_OBJECTS) $(SubsetSwath_LDADD) $(LIBS)

UpdateLevels$(EXEEXT): $(UpdateLevels_OBJECTS) $(UpdateLevels_DEPENDENCIES) $(EXTRA_UpdateLevels_DEPENDENCIES) 
	@rm -f UpdateLevels$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(UpdateLevels_OBJECTS) $(UpdateLevels_LDADD) $(LIBS)

WriteFields$(EXEEXT): $(WriteFields_OBJECTS) $(WriteFields_DEPENDENCIES) $(EXTRA_WriteFields_DEPENDENCIES) 
	@rm -f WriteFields$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(WriteFields_OBJECTS) $(WriteFields_LDADD) $(LIBS)

WriteGDflds$(EXEEXT): $(WriteGDflds_OBJECTS) $(WriteGDflds_DEPENDENCIES) $(EXTRA_WriteGDflds_DEPENDENCIES) 
	@rm -f WriteGDflds$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(WriteGDflds_OBJECTS) $(WriteGDflds_LDADD) $(LIBS)

WriteLevels$(EXEEXT): $(WriteLevels_OBJECTS) $(WriteLevels_DEPENDENCIES) $(EXTRA_WriteLevels_DEPENDENCIES) 
	@rm -f WriteLevels$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(WriteLevels_OBJECTS) $(WriteLevels_LDADD) $(LIBS)

appendfield$(EXEEXT): $(appendfield_OBJECTS) $(appendfield_DEPENDENCIES) $(EXTRA_appendfield_DEPENDENCIES) 
	@rm -f appendfield$(EXEEXT)
	$(AM_V_F77LD)$(F77LINK) $(appendfield_OBJECTS) $(appendfield_LDADD) $(LIBS)

definefields$(EXEEXT): $(definefields_OBJECTS) $(definefields_DEPENDENCIES) $(EXTRA_definefields_DEPENDENCIES) 
	@rm -f definefields$(EXEEXT)
	$(AM_V_F77LD)$(F77LINK) $(definefields_OBJECTS) $(definefields_LDADD) $(LIBS)

definegdflds$(EXEEXT): $(definegdflds_OBJECTS) $(definegdflds_DEPENDENCIES) $(EXTRA_definegdflds_DEPENDENCIES) 
	@rm -f definegdflds$(EXEEXT)
	$(AM_V_F77LD)$(F77LINK) $(definegdflds_OBJECTS) $(definegdflds_LDADD) $(LIBS)

definelevels$(EXEEXT): $(definelevels_OBJECTS) $(definelevels_DEPENDENCIES) $(EXTRA_definelevels_DEPENDENCIES) 
	@rm -f definelevels$(EXEEXT)
	$(AM_V_F77LD)$(F77LINK) $(definelevels_OBJECTS) $(definelevels_LDADD) $(LIBS)

inquiregrid$(EXEEXT): $(inquiregrid_OBJECTS) $(inquiregrid_DEPENDENCIES) $(EXTRA_inquiregrid_DEPENDENCIES) 
	@rm -f inquiregrid$(EXEEXT)
	$(AM_V_F77LD)$(F77LINK) $(inquiregrid_OBJECTS) $(inquiregrid_LDADD) $(LIBS)

inquireswath$(EXEEXT): $(inquireswath_OBJECTS) $(inquireswath_DEPENDENCIES) $(EXTRA_inquireswath_DEPENDENCIES) 
	@rm -f inquireswath$(EXEEXT)
	$(AM_V_F77LD)$(F77LINK) $(inquireswath_OBJECTS) $(inquireswath_LDADD) $(LIBS)

readfields$(EXEEXT): $(readfields_OBJECTS) $(readfields_DEPENDENCIES) $(EXTRA_readfields_DEPENDENCIES) 
	@rm -f readfields$(EXEEXT)
	$(AM_V_F77LD)$(F77LINK) $(readfields_OBJECTS) $(readfields_LDADD) $(LIBS)

readgdflds$(EXEEXT): $(readgdflds_OBJECTS) $(readgdflds_DEPENDENCIES) $(EXTRA_readgdflds_DEPENDENCIES) 
	@rm -f readgdflds$(EXEEXT)
	$(AM_V_F77LD)$(F77LINK) $(readgdflds_OBJECTS) $(readgdflds_LDADD) $(LIBS)

readlevels$(EXEEXT): $(readlevels_OBJECTS) $(readlevels_DEPENDENCIES) $(EXTRA_readlevels_DEPENDENCIES) 
	@rm -f readlevels$(EXEEXT)
	$(AM_V_F77LD)$(F77LINK) $(readlevels_OBJECTS) $(readlevels_LDADD) $(LIBS)

setupgrid$(EXEEXT): $(setupgrid_OBJECTS) $(setupgrid_DEPENDENCIES) $(EXTRA_setupgrid_DEPENDENCIES) 
	@rm -f setupgrid$(EXEEXT)
	$(AM_V_F77LD)$(F77LINK) $(setupgrid_OBJECTS) $(setupgrid_LDADD) $(LIBS)

setuppoint$(EXEEXT): $(setuppoint_OBJECTS) $(setuppoint_DEPENDENCIES) $(EXTRA_setuppoint_DEPENDENCIES) 
	@rm -f setuppoint$(EXEEXT)
	$(AM_V_F77LD)$(F77LINK) $(setuppoint_OBJECTS) $(setuppoint_LDADD) $(LIBS)

setupswath$(EXEEXT): $(setupswath_OBJECTS) $(setupswath_DEPENDENCIES) $(EXTRA_setupswath_DEPENDENCIES) 
	@rm -f setupswath$(EXEEXT)
	$(AM_V_F77LD)$(F77LINK) $(setupswath_OBJECTS) $(setupswath_LDADD) $(LIBS)

subsetgrid$(EXEEXT): $(subsetgrid_OBJECTS) $(subsetgrid_DEPENDENCIES) $(EXTRA_subsetgrid_DEPENDENCIES) 
	@rm -f subsetgrid$(EXEEXT)
	$(AM_V_F77LD)$(F77LINK) $(subsetgrid_OBJECTS) $(subsetgrid_LDADD) $(LIBS)

subsetpoint$(EXEEXT): $(subsetpoint_OBJECTS) $(subsetpoint_DEPENDENCIES) $(EXTRA_subsetpoint_DEPENDENCIES) 
	@rm -f subsetpoint$(EXEEXT)
	$(AM_V_F77LD)$(F77LINK) $(subsetpoint_OBJECTS) $(subsetpoint_LDADD) $(LIBS)

subsetswath$(EXEEXT): $(subsetswath_OBJECTS) $(subsetswath_DEPENDENCIES) $(EXTRA_subsetswath_DEPENDENCIES) 
	@rm -f subsetswath$(EXEEXT)
	$(AM_V_F77LD)$(F77LINK) $(subsetswath_OBJECTS) $(subsetswath_LDADD) $(LIBS)

updatelevels$(EXEEXT): $(updatelevels_OBJECTS) $(updatelevels_DEPENDENCIES) $(EXTRA_updatelevels_DEPENDENCIES) 
	@rm -f updatelevels$(EXEEXT)
	$(AM_V_F77LD)$(F77LINK) $(updatelevels_OBJECTS) $(updatelevels_LDADD) $(LIBS)

writefields$(EXEEXT): $(writefields_OBJECTS) $(writefields_DEPENDENCIES) $(EXTRA_writefields_DEPENDENCIES) 
	@rm -f writefields$(EXEEXT)
	$(AM_V_F77LD)$(F77LINK) $(writefields_OBJECTS) $(writefields_LDADD) $(LIBS)

writegdflds$(EXEEXT): $(writegdflds_OBJECTS) $(writegdflds_DEPENDENCIES) $(EXTRA_writegdflds_DEPENDENCIES) 
	@rm -f writegdflds$(EXEEXT)
	$(AM_V_F77LD)$(F77LINK) $(writegdflds_OBJECTS) $(writegdflds_LDADD) $(LIBS)

writelevels$(EXEEXT): $(writelevels_OBJECTS) $(writelevels_DEPENDENCIES) $(EXTRA_writelevels_DEPENDENCIES) 
	@rm -f writelevels$(EXEEXT)
	$(AM_V_F77LD)$(F77LINK) $(writelevels_OBJECTS) $(writelevels_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/AppendField.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/DefineFields.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/DefineGDflds.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/DefineLevels.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/InquireGrid.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/InquireSwath.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ReadFields.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ReadGDflds.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ReadLevels.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SetupGrid.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SetupPoint.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SetupSwath.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SubsetGrid.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SubsetPoint.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SubsetSwath.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/UpdateLevels.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/WriteFields.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/WriteGDflds.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/WriteLevels.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c $<

.c.obj:
@am__fastdepCC_TRUE@	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LTCOMPILE) -c -o $@ $<

.f.o:
	$(AM_V_F77)$(F77COMPILE) -c -o $@ $<

.f.obj:
	$(AM_V_F77)$(F77COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.f.lo:
	$(AM_V_F77)$(LTF77COMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-local
check: check-am
all-am: Makefile
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am check-local clean \
	clean-checkPROGRAMS clean-generic clean-libtool cscopelist-am \
	ctags ctags-am distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am


check-local: $(TEST_SEQUENCES)

swath_demo: $(check_PROGRAMS)
	./SetupSwath
	./DefineFields
	./WriteFields
	./ReadFields
	./InquireSwath
	./AppendField
	./SubsetSwath
swath_demo_fortran: $(check_PROGRAMS)
	./setupswath
	./definefields
	./writefields
	./readfields
	./inquireswath
	./appendfield
	./subsetswath

grid_demo: $(check_PROGRAMS)
	./SetupGrid
	./DefineGDflds
	./WriteGDflds
	./ReadGDflds
	./InquireGrid
	./SubsetGrid
grid_demo_fortran: $(check_PROGRAMS)
	./setupgrid
	./definegdflds
	./writegdflds
	./readgdflds
	./inquiregrid
	./subsetgrid

point_demo: $(check_PROGRAMS)
	./SetupPoint
	./DefineLevels
	./WriteLevels
	./ReadLevels
point_demo_fortran: $(check_PROGRAMS)
	./setuppoint
	./definelevels
	./writelevels
	./readlevels

reset_hdf_files:
	rm -f SwathFile.hdf GridFile.hdf PointFile.hdf

.PHONY: $(TEST_SEQUENCES)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
